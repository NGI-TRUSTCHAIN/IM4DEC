{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.36.3",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@veramo/credential-eip712!",
  "docComment": "",
  "name": "@veramo/credential-eip712",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@veramo/credential-eip712!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@veramo/credential-eip712!CredentialIssuerEIP712:class",
          "docComment": "/**\n * A Veramo plugin that implements the {@link ICredentialIssuerEIP712} methods.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CredentialIssuerEIP712 implements "
            },
            {
              "kind": "Reference",
              "text": "IAgentPlugin",
              "canonicalReference": "@veramo/core-types!IAgentPlugin:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/agent/CredentialEIP712.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "CredentialIssuerEIP712",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/credential-eip712!CredentialIssuerEIP712:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CredentialIssuerEIP712` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/credential-eip712!CredentialIssuerEIP712#createVerifiableCredentialEIP712:member(1)",
              "docComment": "/**\n * Creates a Verifiable Credential. The payload, signer and format are chosen based on the `args` parameter.\n *\n * @remarks\n *\n * Please see {@link https://www.w3.org/TR/vc-data-model/#credentials | Verifiable Credential data model}\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @param args - Arguments necessary to create the Credential.\n *\n * @param context - This reserved param is automatically added and handled by the framework, *do not override*\n *\n * @returns - a promise that resolves to the {@link @veramo/core-types#VerifiableCredential} that was requested or rejects with an error if there was a problem with the input or while getting the key to sign\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createVerifiableCredentialEIP712(args: "
                },
                {
                  "kind": "Reference",
                  "text": "ICreateVerifiableCredentialEIP712Args",
                  "canonicalReference": "@veramo/credential-eip712!ICreateVerifiableCredentialEIP712Args:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequiredContext",
                  "canonicalReference": "@veramo/credential-eip712!IRequiredContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "VerifiableCredential",
                  "canonicalReference": "@veramo/core-types!VerifiableCredential:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createVerifiableCredentialEIP712"
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/credential-eip712!CredentialIssuerEIP712#createVerifiablePresentationEIP712:member(1)",
              "docComment": "/**\n * Creates a Verifiable Presentation. The payload and signer are chosen based on the `args` parameter.\n *\n * @remarks\n *\n * Please see {@link https://www.w3.org/TR/vc-data-model/#presentations | Verifiable Presentation data model}\n *\n * @param args - Arguments necessary to create the Presentation.\n *\n * @param context - This reserved param is automatically added and handled by the framework, *do not override*\n *\n * @returns - a promise that resolves to the {@link @veramo/core-types#VerifiablePresentation} that was requested or rejects with an error if there was a problem with the input or while getting the key to sign\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createVerifiablePresentationEIP712(args: "
                },
                {
                  "kind": "Reference",
                  "text": "ICreateVerifiablePresentationEIP712Args",
                  "canonicalReference": "@veramo/credential-eip712!ICreateVerifiablePresentationEIP712Args:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequiredContext",
                  "canonicalReference": "@veramo/credential-eip712!IRequiredContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "VerifiablePresentation",
                  "canonicalReference": "@veramo/core-types!VerifiablePresentation:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createVerifiablePresentationEIP712"
            },
            {
              "kind": "Property",
              "canonicalReference": "@veramo/credential-eip712!CredentialIssuerEIP712#methods:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly methods: "
                },
                {
                  "kind": "Reference",
                  "text": "ICredentialIssuerEIP712",
                  "canonicalReference": "@veramo/credential-eip712!ICredentialIssuerEIP712:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "methods",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@veramo/credential-eip712!CredentialIssuerEIP712#schema:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly schema: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        components: {\n            schemas: {\n                ICreateVerifiableCredentialEIP712Args: {\n                    type: string;\n                    properties: {\n                        credential: {\n                            $ref: string;\n                            description: string;\n                        };\n                        keyRef: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                CredentialPayload: {\n                    type: string;\n                    properties: {\n                        issuer: {\n                            $ref: string;\n                        };\n                        credentialSubject: {\n                            $ref: string;\n                        };\n                        type: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        \"@context\": {\n                            $ref: string;\n                        };\n                        issuanceDate: {\n                            $ref: string;\n                        };\n                        expirationDate: {\n                            $ref: string;\n                        };\n                        credentialStatus: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IssuerType: {\n                    anyOf: ({\n                        type: string;\n                        properties: {\n                            id: {\n                                type: string;\n                            };\n                        };\n                        required: string[];\n                    } | {\n                        type: string;\n                        properties?: undefined;\n                        required?: undefined;\n                    })[];\n                    description: string;\n                };\n                CredentialSubject: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                ContextType: {\n                    anyOf: ({\n                        type: string;\n                        items?: undefined;\n                    } | {\n                        type: string;\n                        items: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                        };\n                    })[];\n                    description: string;\n                };\n                DateType: {\n                    type: string;\n                    description: string;\n                };\n                CredentialStatusReference: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        type: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiableCredential: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        issuer: {\n                            $ref: string;\n                        };\n                        credentialSubject: {\n                            $ref: string;\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        \"@context\": {\n                            $ref: string;\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        credentialStatus: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ProofType: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                ICreateVerifiablePresentationEIP712Args: {\n                    type: string;\n                    properties: {\n                        presentation: {\n                            $ref: string;\n                            description: string;\n                        };\n                        keyRef: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                PresentationPayload: {\n                    type: string;\n                    properties: {\n                        holder: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        type: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        \"@context\": {\n                            $ref: string;\n                        };\n                        verifier: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        issuanceDate: {\n                            $ref: string;\n                        };\n                        expirationDate: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                W3CVerifiableCredential: {\n                    anyOf: {\n                        $ref: string;\n                    }[];\n                    description: string;\n                };\n                CompactJWT: {\n                    type: string;\n                    description: string;\n                };\n                VerifiablePresentation: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        holder: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        \"@context\": {\n                            $ref: string;\n                        };\n                        verifier: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IVerifyCredentialEIP712Args: {\n                    type: string;\n                    properties: {\n                        credential: {\n                            $ref: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IVerifyPresentationEIP712Args: {\n                    type: string;\n                    properties: {\n                        presentation: {\n                            $ref: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n            };\n            methods: {\n                createVerifiableCredentialEIP712: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                createVerifiablePresentationEIP712: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                verifyCredentialEIP712: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                verifyPresentationEIP712: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n            };\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "schema",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/credential-eip712!ICreateVerifiableCredentialEIP712Args:interface",
          "docComment": "/**\n * Encapsulates the parameters required to create a {@link https://www.w3.org/TR/vc-data-model/#credentials | W3C Verifiable Credential}\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICreateVerifiableCredentialEIP712Args "
            }
          ],
          "fileUrlPath": "src/types/ICredentialEIP712.ts",
          "releaseTag": "Beta",
          "name": "ICreateVerifiableCredentialEIP712Args",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/credential-eip712!ICreateVerifiableCredentialEIP712Args#credential:member",
              "docComment": "/**\n * The json payload of the Credential according to the {@link https://www.w3.org/TR/vc-data-model/#credentials | canonical model}\n *\n * The signer of the Credential is chosen based on the `issuer.id` property of the `credential`\n *\n * `@context`, 'type' and 'issuanceDate' will be added automatically if omitted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "credential: "
                },
                {
                  "kind": "Reference",
                  "text": "CredentialPayload",
                  "canonicalReference": "@veramo/core-types!CredentialPayload:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "credential",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/credential-eip712!ICreateVerifiableCredentialEIP712Args#keyRef:member",
              "docComment": "/**\n * Specific key to use for signing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyRef?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "keyRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/credential-eip712!ICreateVerifiablePresentationEIP712Args:interface",
          "docComment": "/**\n * Encapsulates the parameters required to create a {@link https://www.w3.org/TR/vc-data-model/#presentations | W3C Verifiable Presentation} using the {@link https://w3c-ccg.github.io/ethereum-eip712-signature-2021-spec/ | EthereumEip712Signature2021} proof format.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICreateVerifiablePresentationEIP712Args "
            }
          ],
          "fileUrlPath": "src/types/ICredentialEIP712.ts",
          "releaseTag": "Beta",
          "name": "ICreateVerifiablePresentationEIP712Args",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/credential-eip712!ICreateVerifiablePresentationEIP712Args#keyRef:member",
              "docComment": "/**\n * [Optional] The ID of the key that should sign this presentation. If this is not specified, the first matching key will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyRef?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "keyRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/credential-eip712!ICreateVerifiablePresentationEIP712Args#presentation:member",
              "docComment": "/**\n * The json payload of the Presentation according to the {@link https://www.w3.org/TR/vc-data-model/#presentations | canonical model}.\n *\n * The signer of the Presentation is chosen based on the `holder` property of the `presentation`\n *\n * `@context`, `type` and `issuanceDate` will be added automatically if omitted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "presentation: "
                },
                {
                  "kind": "Reference",
                  "text": "PresentationPayload",
                  "canonicalReference": "@veramo/core-types!PresentationPayload:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "presentation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/credential-eip712!ICredentialIssuerEIP712:interface",
          "docComment": "/**\n * The interface definition for a plugin that can issue and verify Verifiable Credentials and Presentations that use EIP712 proof format.\n *\n * @remarks\n *\n * Please see {@link https://w3c-ccg.github.io/ethereum-eip712-signature-2021-spec/ | EthereumEip712Signature2021}\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICredentialIssuerEIP712 extends "
            },
            {
              "kind": "Reference",
              "text": "IPluginMethodMap",
              "canonicalReference": "@veramo/core-types!IPluginMethodMap:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/types/ICredentialEIP712.ts",
          "releaseTag": "Beta",
          "name": "ICredentialIssuerEIP712",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/credential-eip712!ICredentialIssuerEIP712#createVerifiableCredentialEIP712:member(1)",
              "docComment": "/**\n * Creates a Verifiable Credential. The payload, signer and format are chosen based on the `args` parameter.\n *\n * @remarks\n *\n * Please see {@link https://www.w3.org/TR/vc-data-model/#credentials | Verifiable Credential data model}\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @param args - Arguments necessary to create the Credential.\n *\n * @param context - This reserved param is automatically added and handled by the framework, *do not override*\n *\n * @returns - a promise that resolves to the {@link @veramo/core-types#VerifiableCredential} that was requested or rejects with an error if there was a problem with the input or while getting the key to sign\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createVerifiableCredentialEIP712(args: "
                },
                {
                  "kind": "Reference",
                  "text": "ICreateVerifiableCredentialEIP712Args",
                  "canonicalReference": "@veramo/credential-eip712!ICreateVerifiableCredentialEIP712Args:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequiredContext",
                  "canonicalReference": "@veramo/credential-eip712!IRequiredContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "VerifiableCredential",
                  "canonicalReference": "@veramo/core-types!VerifiableCredential:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "createVerifiableCredentialEIP712"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/credential-eip712!ICredentialIssuerEIP712#createVerifiablePresentationEIP712:member(1)",
              "docComment": "/**\n * Creates a Verifiable Presentation. The payload and signer are chosen based on the `args` parameter.\n *\n * @remarks\n *\n * Please see {@link https://www.w3.org/TR/vc-data-model/#presentations | Verifiable Presentation data model}\n *\n * @param args - Arguments necessary to create the Presentation.\n *\n * @param context - This reserved param is automatically added and handled by the framework, *do not override*\n *\n * @returns - a promise that resolves to the {@link @veramo/core-types#VerifiablePresentation} that was requested or rejects with an error if there was a problem with the input or while getting the key to sign\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createVerifiablePresentationEIP712(args: "
                },
                {
                  "kind": "Reference",
                  "text": "ICreateVerifiablePresentationEIP712Args",
                  "canonicalReference": "@veramo/credential-eip712!ICreateVerifiablePresentationEIP712Args:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequiredContext",
                  "canonicalReference": "@veramo/credential-eip712!IRequiredContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "VerifiablePresentation",
                  "canonicalReference": "@veramo/core-types!VerifiablePresentation:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "createVerifiablePresentationEIP712"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/credential-eip712!ICredentialIssuerEIP712#verifyCredentialEIP712:member(1)",
              "docComment": "/**\n * Verifies a Verifiable Credential in EIP712 Format.\n *\n * @remarks\n *\n * Please see {@link https://www.w3.org/TR/vc-data-model/#credentials | Verifiable Credential data model}\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @param args - Arguments necessary to verify a VerifiableCredential\n *\n * @param context - This reserved param is automatically added and handled by the framework, *do not override*\n *\n * @returns - a promise that resolves to the boolean true on successful verification or rejects on error\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verifyCredentialEIP712(args: "
                },
                {
                  "kind": "Reference",
                  "text": "IVerifyCredentialEIP712Args",
                  "canonicalReference": "@veramo/credential-eip712!IVerifyCredentialEIP712Args:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequiredContext",
                  "canonicalReference": "@veramo/credential-eip712!IRequiredContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "verifyCredentialEIP712"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/credential-eip712!ICredentialIssuerEIP712#verifyPresentationEIP712:member(1)",
              "docComment": "/**\n * Verifies a Verifiable Presentation EIP712 Format.\n *\n * @remarks\n *\n * Please see {@link https://www.w3.org/TR/vc-data-model/#presentations | Verifiable Credential data model}\n *\n * @param args - Arguments necessary to verify the Presentation\n *\n * @param context - This reserved param is automatically added and handled by the framework, *do not override*\n *\n * @returns - a promise that resolves to the boolean true on successful verification or rejects on error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verifyPresentationEIP712(args: "
                },
                {
                  "kind": "Reference",
                  "text": "IVerifyPresentationEIP712Args",
                  "canonicalReference": "@veramo/credential-eip712!IVerifyPresentationEIP712Args:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IRequiredContext",
                  "canonicalReference": "@veramo/credential-eip712!IRequiredContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "verifyPresentationEIP712"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@veramo/credential-eip712!IRequiredContext:type",
          "docComment": "/**\n * Represents the requirements that this plugin has. The agent that is using this plugin is expected to provide these methods.\n *\n * This interface can be used for static type checks, to make sure your application is properly initialized.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IRequiredContext = "
            },
            {
              "kind": "Reference",
              "text": "IAgentContext",
              "canonicalReference": "@veramo/core-types!IAgentContext:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IResolver",
              "canonicalReference": "@veramo/core-types!IResolver:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "IKeyManager",
              "canonicalReference": "@veramo/core-types!IKeyManager:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "IDIDManager",
              "canonicalReference": "@veramo/core-types!IDIDManager:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types/ICredentialEIP712.ts",
          "releaseTag": "Beta",
          "name": "IRequiredContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/credential-eip712!IVerifyCredentialEIP712Args:interface",
          "docComment": "/**\n * Encapsulates the parameters required to verify a {@link https://www.w3.org/TR/vc-data-model/#credentials | W3C Verifiable Credential}\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IVerifyCredentialEIP712Args "
            }
          ],
          "fileUrlPath": "src/types/ICredentialEIP712.ts",
          "releaseTag": "Beta",
          "name": "IVerifyCredentialEIP712Args",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/credential-eip712!IVerifyCredentialEIP712Args#credential:member",
              "docComment": "/**\n * The json payload of the Credential according to the {@link https://www.w3.org/TR/vc-data-model/#credentials | canonical model}\n *\n * The signer of the Credential is chosen based on the `issuer.id` property of the `credential`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "credential: "
                },
                {
                  "kind": "Reference",
                  "text": "VerifiableCredential",
                  "canonicalReference": "@veramo/core-types!VerifiableCredential:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "credential",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/credential-eip712!IVerifyPresentationEIP712Args:interface",
          "docComment": "/**\n * Encapsulates the parameters required to verify a {@link https://www.w3.org/TR/vc-data-model/#presentations | W3C Verifiable Presentation}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IVerifyPresentationEIP712Args "
            }
          ],
          "fileUrlPath": "src/types/ICredentialEIP712.ts",
          "releaseTag": "Public",
          "name": "IVerifyPresentationEIP712Args",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/credential-eip712!IVerifyPresentationEIP712Args#presentation:member",
              "docComment": "/**\n * The Verifiable Presentation object according to the {@link https://www.w3.org/TR/vc-data-model/#presentations | canonical model} or the JWT representation.\n *\n * The signer of the Presentation is verified based on the `holder` property of the `presentation` or the `iss` property of the JWT payload respectively\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "presentation: "
                },
                {
                  "kind": "Reference",
                  "text": "VerifiablePresentation",
                  "canonicalReference": "@veramo/core-types!VerifiablePresentation:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "presentation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
