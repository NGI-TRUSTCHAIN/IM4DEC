{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.36.3",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@veramo/did-comm!",
  "docComment": "/**\n * Provides a {@link @veramo/did-comm#DIDComm | plugin} for the {@link @veramo/core#Agent} that implements {@link @veramo/did-comm#IDIDComm} interface. Provides a {@link @veramo/did-comm#DIDCommMessageHandler | plugin} for the {@link @veramo/message-handler#MessageHandler} that decrypts messages.\n *\n * @packageDocumentation\n */\n",
  "name": "@veramo/did-comm",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@veramo/did-comm!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!AbstractDIDCommTransport:class",
          "docComment": "/**\n * Abstract implementation of {@link IDIDCommTransport}.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractDIDCommTransport implements "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommTransport",
              "canonicalReference": "@veramo/did-comm!IDIDCommTransport:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/transports/transports.ts",
          "releaseTag": "Beta",
          "isAbstract": true,
          "name": "AbstractDIDCommTransport",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!AbstractDIDCommTransport:constructor(1)",
              "docComment": "/**\n * Shared constructor that takes an optional identifier (for reusing) for this {@link IDIDCommTransport}.\n *\n * @param id - An optional identifier for this {@link IDIDCommTransport}.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@veramo/did-comm!AbstractDIDCommTransport#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!AbstractDIDCommTransport#isServiceSupported:member(1)",
              "docComment": "/**\n * Returns `true` if this transport is suitable for the provided DID Document service section, otherwise `false`.\n *\n * @param service - The DID Document service section\n *\n * This API may change without a BREAKING CHANGE notice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract isServiceSupported(service: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "service",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "isServiceSupported"
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!AbstractDIDCommTransport#send:member(1)",
              "docComment": "/**\n * Sends the provided raw message (without further processing) to the service endpoint defined in the provided DID Document service section.\n *\n * @param service - The DID Document service section that contains a `serviceEndpoint` entry.\n *\n * @param message - The message to be sent.\n *\n * This API may change without a BREAKING CHANGE notice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract send(service: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommTransportResult",
                  "canonicalReference": "@veramo/did-comm!IDIDCommTransportResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "service",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "send"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@veramo/did-comm!CoordinateMediation:enum",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * Represents the types of messages that can be sent and received by the Mediator Coordinator protocol\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationRecipientMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum CoordinateMediation "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "name": "CoordinateMediation",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!CoordinateMediation.MEDIATE_DENY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MEDIATE_DENY = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/coordinate-mediation/3.0/mediate-deny\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "MEDIATE_DENY"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!CoordinateMediation.MEDIATE_GRANT:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MEDIATE_GRANT = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/coordinate-mediation/3.0/mediate-grant\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "MEDIATE_GRANT"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!CoordinateMediation.MEDIATE_REQUEST:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MEDIATE_REQUEST = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/coordinate-mediation/3.0/mediate-request\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "MEDIATE_REQUEST"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!CoordinateMediation.RECIPIENT_QUERY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RECIPIENT_QUERY = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/coordinate-mediation/3.0/recipient-query\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "RECIPIENT_QUERY"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!CoordinateMediation.RECIPIENT_QUERY_RESPONSE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RECIPIENT_QUERY_RESPONSE = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/coordinate-mediation/3.0/recipient\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "RECIPIENT_QUERY_RESPONSE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!CoordinateMediation.RECIPIENT_UPDATE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RECIPIENT_UPDATE = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/coordinate-mediation/3.0/recipient-update\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "RECIPIENT_UPDATE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!CoordinateMediation.RECIPIENT_UPDATE_RESPONSE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RECIPIENT_UPDATE_RESPONSE = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/coordinate-mediation/3.0/recipient-update-response\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "RECIPIENT_UPDATE_RESPONSE"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!CoordinateMediationMediatorMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that handles Mediator Coordinator messages for the mediator role. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CoordinateMediationMediatorMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "CoordinateMediationMediatorMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationMediatorMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CoordinateMediationMediatorMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationMediatorMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles a Mediator Coordinator messages for the mediator role https://didcomm.org/mediator-coordination/2.0/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IContext",
                  "canonicalReference": "@veramo/did-comm!~IContext_5:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!CoordinateMediationRecipientMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that handles Mediator Coordinator messages for the recipient role. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CoordinateMediationRecipientMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "CoordinateMediationRecipientMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationRecipientMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CoordinateMediationRecipientMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationRecipientMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles a Mediator Coordinator messages for the recipient role https://didcomm.org/mediator-coordination/2.0/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IContext",
                  "canonicalReference": "@veramo/did-comm!~IContext_5:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!CoordinateMediationV3MediatorMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that handles Mediator Coordinator messages for the mediator role. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CoordinateMediationV3MediatorMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "CoordinateMediationV3MediatorMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationV3MediatorMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CoordinateMediationV3MediatorMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationV3MediatorMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles a Mediator Coordinator messages for the mediator role https://didcomm.org/mediator-coordination/3.0/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@veramo/did-comm!~Context:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!CoordinateMediationV3MediatorMessageHandlerOptions:interface",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * Parameter options for the CoordinateMediationV3MediatorMessageHandler {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CoordinateMediationV3MediatorMessageHandlerOptions "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "name": "CoordinateMediationV3MediatorMessageHandlerOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationV3MediatorMessageHandlerOptions#isMediateDefaultGrantAll:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isMediateDefaultGrantAll: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "isMediateDefaultGrantAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!CoordinateMediationV3RecipientMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that handles Mediator Coordinator messages for the recipient role. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CoordinateMediationV3RecipientMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "CoordinateMediationV3RecipientMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationV3RecipientMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CoordinateMediationV3RecipientMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!CoordinateMediationV3RecipientMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles a Mediator Coordinator messages for the recipient role https://didcomm.org/mediator-coordination/2.0/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@veramo/did-comm!~Context:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@veramo/did-comm!createDeliveryRequestMessage:function(1)",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createDeliveryRequestMessage(recipientDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", mediatorDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "recipientDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "mediatorDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "createDeliveryRequestMessage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@veramo/did-comm!createMediateGrantMessage:function(1)",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createMediateGrantMessage(recipientDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", mediatorDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", thid: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "recipientDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "mediatorDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "thid",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "createMediateGrantMessage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@veramo/did-comm!createMediateRequestMessage:function(1)",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createMediateRequestMessage(recipientDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", mediatorDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "recipientDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "mediatorDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "createMediateRequestMessage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@veramo/did-comm!createStatusRequestMessage:function(1)",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createStatusRequestMessage(recipientDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", mediatorDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "recipientDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "mediatorDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "createStatusRequestMessage"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!createV3DeliveryRequestMessage:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createV3DeliveryRequestMessage: "
            },
            {
              "kind": "Content",
              "text": "(recipientDidUrl: string, mediatorDidUrl: string) => "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "createV3DeliveryRequestMessage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!createV3MediateDenyMessage:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createV3MediateDenyMessage: "
            },
            {
              "kind": "Content",
              "text": "(recipientDidUrl: string, mediatorDidUrl: string, thid: string) => "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "createV3MediateDenyMessage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@veramo/did-comm!createV3MediateGrantMessage:function(1)",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createV3MediateGrantMessage(recipientDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", mediatorDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", thid: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "recipientDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "mediatorDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "thid",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "createV3MediateGrantMessage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@veramo/did-comm!createV3MediateRequestMessage:function(1)",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @returns a structured message for the Mediator Coordinator protocol\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createV3MediateRequestMessage(recipientDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", mediatorDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "recipientDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "mediatorDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "createV3MediateRequestMessage"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!createV3RecipientQueryMessage:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @returns a structured query message for the Mediator Coordinator protocol\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createV3RecipientQueryMessage: "
            },
            {
              "kind": "Content",
              "text": "(recipientDidUrl: string, mediatorDidUrl: string) => "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "createV3RecipientQueryMessage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!createV3RecipientQueryResponseMessage:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createV3RecipientQueryResponseMessage: "
            },
            {
              "kind": "Content",
              "text": "(recipientDidUrl: string, mediatorDidUrl: string, thid: string, dids: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<'recipient_did', "
            },
            {
              "kind": "Reference",
              "text": "RecipientDid",
              "canonicalReference": "@veramo/mediation-manager!RecipientDid:type"
            },
            {
              "kind": "Content",
              "text": ">[]) => "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "createV3RecipientQueryResponseMessage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!createV3RecipientUpdateMessage:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @returns a structured upate message for the Mediator Coordinator protocol\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createV3RecipientUpdateMessage: "
            },
            {
              "kind": "Content",
              "text": "(recipientDidUrl: string, mediatorDidUrl: string, updates: "
            },
            {
              "kind": "Reference",
              "text": "Update",
              "canonicalReference": "@veramo/did-comm!Update:interface"
            },
            {
              "kind": "Content",
              "text": "[]) => "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "createV3RecipientUpdateMessage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@veramo/did-comm!createV3RecipientUpdateResponseMessage:function(1)",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createV3RecipientUpdateResponseMessage(recipientDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", mediatorDidUrl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", thid: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", updates: "
            },
            {
              "kind": "Reference",
              "text": "UpdateResult",
              "canonicalReference": "@veramo/did-comm!UpdateResult:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "recipientDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "mediatorDidUrl",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "thid",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "updates",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "name": "createV3RecipientUpdateResponseMessage"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!createV3StatusRequestMessage:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createV3StatusRequestMessage: "
            },
            {
              "kind": "Content",
              "text": "(recipientDidUrl: string, mediatorDidUrl: string) => "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "createV3StatusRequestMessage",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!DELIVERY_REQUEST_MESSAGE_TYPE:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DELIVERY_REQUEST_MESSAGE_TYPE = "
            },
            {
              "kind": "Content",
              "text": "\"https://didcomm.org/messagepickup/3.0/delivery-request\""
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "DELIVERY_REQUEST_MESSAGE_TYPE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!DIDComm:class",
          "docComment": "/**\n * DID Comm plugin for {@link @veramo/core#Agent}\n *\n * This plugin provides a method of creating an encrypted message according to the initial {@link https://github.com/decentralized-identifier/DIDComm-js | DIDComm-js} implementation.\n *\n * @remarks\n *\n * Be advised that this spec is still not final and that this protocol may need to change.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DIDComm implements "
            },
            {
              "kind": "Reference",
              "text": "IAgentPlugin",
              "canonicalReference": "@veramo/core-types!IAgentPlugin:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/didcomm.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "DIDComm",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!DIDComm:constructor(1)",
              "docComment": "/**\n * Constructor that takes a list of {@link IDIDCommTransport} objects.\n *\n * @param transports - A list of {@link IDIDCommTransport} objects. Defaults to {@link @veramo/did-comm#DIDCommHttpTransport | DIDCommHttpTransport}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ transports }?: "
                },
                {
                  "kind": "Reference",
                  "text": "DIDCommConfig",
                  "canonicalReference": "@veramo/did-comm!DIDCommConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ transports }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!DIDComm#getDidCommMessageMediaType:member(1)",
              "docComment": "/**\n * Partially decodes a possible DIDComm message string to determine the {@link DIDCommMessageMediaType}\n *\n * @param args - the message to be interpreted\n *\n * @returns - the {@link DIDCommMessageMediaType} if it was successfully parsed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDidCommMessageMediaType({ message }: "
                },
                {
                  "kind": "Reference",
                  "text": "IPackedDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IPackedDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DIDCommMessageMediaType",
                  "canonicalReference": "@veramo/did-comm!DIDCommMessageMediaType:enum"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ message }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDidCommMessageMediaType"
            },
            {
              "kind": "Property",
              "canonicalReference": "@veramo/did-comm!DIDComm#methods:member",
              "docComment": "/**\n * Plugin methods\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly methods: "
                },
                {
                  "kind": "Reference",
                  "text": "IDIDComm",
                  "canonicalReference": "@veramo/did-comm!IDIDComm:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "methods",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!DIDComm#packDIDCommMessage:member(1)",
              "docComment": "/**\n * Packs a {@link IDIDCommMessage} using one of the {@link DIDCommMessagePacking} options.\n *\n * @param args - an {@link IPackDIDCommMessageArgs} object. * args.message - {@link IDIDCommMessage} - the message to be packed * args.packing - {@link DIDCommMessagePacking} - the packing method * args.keyRef - Optional - string - either an `id` of a {@link did-resolver#VerificationMethod} `kid` of a {@link @veramo/core-types#IKey} that will be used when `packing` is `jws` or `authcrypt`. * args.options - {@link IDIDCommOptions} - optional options\n *\n * @param context - This method requires an agent that also has {@link @veramo/core-types#IDIDManager}, {@link @veramo/core-types#IKeyManager} and {@link @veramo/core-types#IResolver} plugins in use. When calling this method, the `context` is supplied automatically by the framework.\n *\n * @returns - a Promise that resolves to a {@link IPackedDIDCommMessage} object containing the serialized packed `message` string\n *\n * This API may change without a BREAKING CHANGE notice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "packDIDCommMessage(args: "
                },
                {
                  "kind": "Reference",
                  "text": "IPackDIDCommMessageArgs",
                  "canonicalReference": "@veramo/did-comm!IPackDIDCommMessageArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IAgentContext",
                  "canonicalReference": "@veramo/core-types!IAgentContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDManager",
                  "canonicalReference": "@veramo/core-types!IDIDManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IKeyManager",
                  "canonicalReference": "@veramo/core-types!IKeyManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IResolver",
                  "canonicalReference": "@veramo/core-types!IResolver:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IPackedDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IPackedDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "packDIDCommMessage"
            },
            {
              "kind": "Property",
              "canonicalReference": "@veramo/did-comm!DIDComm#schema:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly schema: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        components: {\n            schemas: {\n                IPackedDIDCommMessage: {\n                    type: string;\n                    properties: {\n                        message: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                DIDCommMessageMediaType: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                IPackDIDCommMessageArgs: {\n                    type: string;\n                    properties: {\n                        message: {\n                            $ref: string;\n                        };\n                        packing: {\n                            $ref: string;\n                        };\n                        keyRef: {\n                            type: string;\n                        };\n                        options: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDCommMessage: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                        };\n                        from: {\n                            type: string;\n                        };\n                        to: {\n                            type: string;\n                        };\n                        thid: {\n                            type: string;\n                        };\n                        pthid: {\n                            type: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                        expires_time: {\n                            type: string;\n                        };\n                        created_time: {\n                            type: string;\n                        };\n                        next: {\n                            type: string;\n                        };\n                        from_prior: {\n                            type: string;\n                        };\n                        body: {};\n                        attachments: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        return_route: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDCommMessageAttachment: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        description: {\n                            type: string;\n                        };\n                        filename: {\n                            type: string;\n                        };\n                        media_type: {\n                            type: string;\n                        };\n                        format: {\n                            type: string;\n                        };\n                        lastmod_time: {\n                            type: string;\n                        };\n                        byte_count: {\n                            type: string;\n                        };\n                        data: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDCommMessageAttachmentData: {\n                    type: string;\n                    properties: {\n                        jws: {};\n                        hash: {\n                            type: string;\n                        };\n                        links: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        base64: {\n                            type: string;\n                        };\n                        json: {};\n                    };\n                    description: string;\n                };\n                DIDCommMessagePacking: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                IDIDCommOptions: {\n                    type: string;\n                    properties: {\n                        bcc: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                            description: string;\n                        };\n                        recipientKids: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                            description: string;\n                        };\n                        enc: {\n                            type: string;\n                            enum: string[];\n                            description: string;\n                        };\n                        alg: {\n                            type: string;\n                            enum: string[];\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                ISendDIDCommMessageArgs: {\n                    type: string;\n                    properties: {\n                        packedMessage: {\n                            $ref: string;\n                        };\n                        messageId: {\n                            type: string;\n                        };\n                        returnTransportId: {\n                            type: string;\n                        };\n                        recipientDidUrl: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ISendDIDCommMessageResponse: {\n                    type: string;\n                    properties: {\n                        transportId: {\n                            type: string;\n                        };\n                        returnMessage: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMessage: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        createdAt: {\n                            type: string;\n                            description: string;\n                        };\n                        expiresAt: {\n                            type: string;\n                            description: string;\n                        };\n                        threadId: {\n                            type: string;\n                            description: string;\n                        };\n                        raw: {\n                            type: string;\n                            description: string;\n                        };\n                        data: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                            description: string;\n                        };\n                        replyTo: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                            description: string;\n                        };\n                        replyUrl: {\n                            type: string;\n                            description: string;\n                        };\n                        from: {\n                            type: string;\n                            description: string;\n                        };\n                        to: {\n                            type: string;\n                            description: string;\n                        };\n                        metaData: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    $ref: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                            description: string;\n                        };\n                        credentials: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        presentations: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        attachments: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        returnRoute: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMetaData: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        value: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiableCredential: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        issuer: {\n                            $ref: string;\n                        };\n                        credentialSubject: {\n                            $ref: string;\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        \"@context\": {\n                            $ref: string;\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        credentialStatus: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ProofType: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                IssuerType: {\n                    anyOf: ({\n                        type: string;\n                        properties: {\n                            id: {\n                                type: string;\n                            };\n                        };\n                        required: string[];\n                    } | {\n                        type: string;\n                        properties?: undefined;\n                        required?: undefined;\n                    })[];\n                    description: string;\n                };\n                CredentialSubject: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                ContextType: {\n                    anyOf: ({\n                        type: string;\n                        items?: undefined;\n                    } | {\n                        type: string;\n                        items: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                        };\n                    })[];\n                    description: string;\n                };\n                CredentialStatusReference: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        type: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiablePresentation: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        holder: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        \"@context\": {\n                            $ref: string;\n                        };\n                        verifier: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                W3CVerifiableCredential: {\n                    anyOf: {\n                        $ref: string;\n                    }[];\n                    description: string;\n                };\n                CompactJWT: {\n                    type: string;\n                    description: string;\n                };\n                IMessageAttachment: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        description: {\n                            type: string;\n                        };\n                        filename: {\n                            type: string;\n                        };\n                        media_type: {\n                            type: string;\n                        };\n                        format: {\n                            type: string;\n                        };\n                        lastmod_time: {\n                            type: string;\n                        };\n                        byte_count: {\n                            type: string;\n                        };\n                        data: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMessageAttachmentData: {\n                    type: string;\n                    properties: {\n                        jws: {};\n                        hash: {\n                            type: string;\n                        };\n                        links: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        base64: {\n                            type: string;\n                        };\n                        json: {};\n                    };\n                    description: string;\n                };\n                ISendMessageDIDCommAlpha1Args: {\n                    type: string;\n                    properties: {\n                        url: {\n                            type: string;\n                        };\n                        save: {\n                            type: string;\n                        };\n                        data: {\n                            type: string;\n                            properties: {\n                                id: {\n                                    type: string;\n                                };\n                                from: {\n                                    type: string;\n                                };\n                                to: {\n                                    type: string;\n                                };\n                                type: {\n                                    type: string;\n                                };\n                                body: {\n                                    anyOf: {\n                                        type: string;\n                                    }[];\n                                };\n                            };\n                            required: string[];\n                        };\n                        headers: {\n                            type: string;\n                            additionalProperties: {\n                                type: string;\n                            };\n                        };\n                    };\n                    required: string[];\n                    deprecated: string;\n                };\n                IUnpackDIDCommMessageArgs: {\n                    $ref: string;\n                    description: string;\n                };\n                IUnpackedDIDCommMessage: {\n                    type: string;\n                    properties: {\n                        metaData: {\n                            $ref: string;\n                        };\n                        message: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDCommMessageMetaData: {\n                    type: string;\n                    properties: {\n                        packing: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n            };\n            methods: {\n                getDIDCommMessageMediaType: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                packDIDCommMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                sendDIDCommMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                sendMessageDIDCommAlpha1: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                unpackDIDCommMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n            };\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "schema",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!DIDComm#sendDIDCommMessage:member(1)",
              "docComment": "/**\n * Sends the given message to the recipient. If a return-transport is provided it will be checked whether the parent thread allows reusing the route. You cannot reuse the transport if the message was forwarded from a DIDComm mediator.\n *\n * Emits an eventType 'DIDCommV2Message-sent' that contains the message id of packed DIDComm message {@link IPackedDIDCommMessage} after the message was sent.\n *\n * @param args - An object containing the message, recipient information and optional information about the transport that should be used.\n *\n * @param context - This method requires an agent that also has {@link @veramo/core-types#IResolver}, {@link @veramo/core-types#IKeyManager}, {@link @veramo/core-types#IDIDManager}, and {@link @veramo/core-types#IMessageHandler} plugins in use. When calling this method, the `context` is supplied automatically by the framework.\n *\n * @returns - a {@link ISendDIDCommMessageResponse} containing the transport id that was used to send the message and a return message, if one is available. It throws an error in case something went wrong.\n *\n * This API may change without a BREAKING CHANGE notice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendDIDCommMessage(args: "
                },
                {
                  "kind": "Reference",
                  "text": "ISendDIDCommMessageArgs",
                  "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IAgentContext",
                  "canonicalReference": "@veramo/core-types!IAgentContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDManager",
                  "canonicalReference": "@veramo/core-types!IDIDManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IKeyManager",
                  "canonicalReference": "@veramo/core-types!IKeyManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IResolver",
                  "canonicalReference": "@veramo/core-types!IResolver:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IMessageHandler",
                  "canonicalReference": "@veramo/core-types!IMessageHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISendDIDCommMessageResponse",
                  "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sendDIDCommMessage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!DIDComm#sendMessageDIDCommAlpha1:member(1)",
              "docComment": "/**\n * @remarks\n *\n * Be advised that this spec is still not final and that this protocol may need to change.\n *\n * @param args - Arguments necessary for sending a DIDComm message\n *\n * @param context - This reserved param is automatically added and handled by the framework, *do not override*\n *\n * This API may change without a BREAKING CHANGE notice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendMessageDIDCommAlpha1(args: "
                },
                {
                  "kind": "Reference",
                  "text": "ISendMessageDIDCommAlpha1Args",
                  "canonicalReference": "@veramo/did-comm!ISendMessageDIDCommAlpha1Args:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IAgentContext",
                  "canonicalReference": "@veramo/core-types!IAgentContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDManager",
                  "canonicalReference": "@veramo/core-types!IDIDManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IKeyManager",
                  "canonicalReference": "@veramo/core-types!IKeyManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IResolver",
                  "canonicalReference": "@veramo/core-types!IResolver:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IMessageHandler",
                  "canonicalReference": "@veramo/core-types!IMessageHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IMessage",
                  "canonicalReference": "@veramo/core-types!IMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sendMessageDIDCommAlpha1"
            },
            {
              "kind": "Property",
              "canonicalReference": "@veramo/did-comm!DIDComm#transports:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly transports: "
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommTransport",
                  "canonicalReference": "@veramo/did-comm!IDIDCommTransport:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "transports",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!DIDComm#unpackDIDCommMessage:member(1)",
              "docComment": "/**\n * Unpacks a possible DIDComm message and returns the {@link IDIDCommMessage} and {@link DIDCommMessagePacking} used to pack it.\n *\n * @param args - an object containing the serialized message to be unpacked\n *\n * @param context - This method requires an agent that also has {@link @veramo/core-types#IDIDManager}, {@link @veramo/core-types#IKeyManager} and {@link @veramo/core-types#IResolver} plugins in use. When calling this method, the `context` is supplied automatically by the framework.\n *\n * @returns - a Promise that resolves to an object containing the {@link IDIDCommMessage} and {@link DIDCommMessagePacking} used.\n *\n * This API may change without a BREAKING CHANGE notice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unpackDIDCommMessage(args: "
                },
                {
                  "kind": "Reference",
                  "text": "IUnpackDIDCommMessageArgs",
                  "canonicalReference": "@veramo/did-comm!IUnpackDIDCommMessageArgs:type"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IAgentContext",
                  "canonicalReference": "@veramo/core-types!IAgentContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDManager",
                  "canonicalReference": "@veramo/core-types!IDIDManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IKeyManager",
                  "canonicalReference": "@veramo/core-types!IKeyManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IResolver",
                  "canonicalReference": "@veramo/core-types!IResolver:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IMessageHandler",
                  "canonicalReference": "@veramo/core-types!IMessageHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IUnpackedDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IUnpackedDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "unpackDIDCommMessage"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!DIDCommConfig:interface",
          "docComment": "/**\n * The config for the {@link DIDComm} DIDComm plugin.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DIDCommConfig<T extends "
            },
            {
              "kind": "Reference",
              "text": "IDIDCommTransport",
              "canonicalReference": "@veramo/did-comm!IDIDCommTransport:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "DIDCommHttpTransport",
              "canonicalReference": "@veramo/did-comm!DIDCommHttpTransport:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/didcomm.ts",
          "releaseTag": "Beta",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "DIDCommConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!DIDCommConfig#transports:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transports?: "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "transports",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!DIDCommHttpTransport:class",
          "docComment": "/**\n * Implementation of {@link IDIDCommTransport} to provide a simple transport based on HTTP(S) requests.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DIDCommHttpTransport extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDIDCommTransport",
              "canonicalReference": "@veramo/did-comm!AbstractDIDCommTransport:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/transports/transports.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "DIDCommHttpTransport",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!DIDCommHttpTransport:constructor(1)",
              "docComment": "/**\n * Creates a new {@link DIDCommHttpTransport}.\n *\n * @param httpMethod - Default HTTP method if not specified in the service section.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(httpMethod?: "
                },
                {
                  "kind": "Content",
                  "text": "'post' | 'get'"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "httpMethod",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@veramo/did-comm!DIDCommHttpTransport#httpMethod:member",
              "docComment": "/**\n * Defines the default HTTP method to use if not specified in the DID Document service entry of the recipient.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "httpMethod: "
                },
                {
                  "kind": "Content",
                  "text": "'post' | 'get'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "httpMethod",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!DIDCommHttpTransport#isServiceSupported:member(1)",
              "docComment": "/**\n * Returns `true` if this transport is suitable for the provided DID Document service section, otherwise `false`.\n *\n * @param service - The DID Document service section\n *\n * This API may change without a BREAKING CHANGE notice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isServiceSupported(service: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "service",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isServiceSupported"
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!DIDCommHttpTransport#send:member(1)",
              "docComment": "/**\n * Sends the provided raw message (without further processing) to the service endpoint defined in the provided DID Document service section.\n *\n * @param service - The DID Document service section that contains a `serviceEndpoint` entry.\n *\n * @param message - The message to be sent.\n *\n * This API may change without a BREAKING CHANGE notice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(service: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommTransportResult",
                  "canonicalReference": "@veramo/did-comm!IDIDCommTransportResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "service",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "send"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!DIDCommMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that decrypts DIDComm messages. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DIDCommMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "DIDCommMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!DIDCommMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DIDCommMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!DIDCommMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles a new packed DIDCommV2 Message (also Alpha support but soon deprecated). - Tests whether raw message is a DIDCommV2 message - Unpacks raw message (JWM/JWE/JWS, or plain JSON). -\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IContext",
                  "canonicalReference": "@veramo/did-comm!~IContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@veramo/did-comm!DIDCommMessageMediaType:enum",
          "docComment": "/**\n * Represents different DIDComm v2 message encapsulation.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum DIDCommMessageMediaType "
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "DIDCommMessageMediaType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!DIDCommMessageMediaType.ENCRYPTED:member",
              "docComment": "/**\n * A JWE encrypted DIDComm message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ENCRYPTED = "
                },
                {
                  "kind": "Content",
                  "text": "\"application/didcomm-encrypted+json\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "ENCRYPTED"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!DIDCommMessageMediaType.PLAIN:member",
              "docComment": "/**\n * A plain JSON DIDComm message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PLAIN = "
                },
                {
                  "kind": "Content",
                  "text": "\"application/didcomm-plain+json\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "PLAIN"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!DIDCommMessageMediaType.SIGNED:member",
              "docComment": "/**\n * A JWS signed DIDComm message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SIGNED = "
                },
                {
                  "kind": "Content",
                  "text": "\"application/didcomm-signed+json\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "SIGNED"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@veramo/did-comm!DIDCommMessagePacking:type",
          "docComment": "/**\n * The possible types of message packing.\n *\n * `authcrypt`, `anoncrypt`, `anoncrypt+authcrypt`, and `anoncrypt+jws` will produce `DIDCommMessageMediaType.ENCRYPTED` messages.\n *\n * `jws` will produce `DIDCommMessageMediaType.SIGNED` messages.\n *\n * `none` will produce `DIDCommMessageMediaType.PLAIN` messages.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DIDCommMessagePacking = "
            },
            {
              "kind": "Content",
              "text": "'authcrypt' | 'anoncrypt' | 'jws' | 'none' | 'anoncrypt+authcrypt' | 'anoncrypt+jws'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "DIDCommMessagePacking",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IDIDComm:interface",
          "docComment": "/**\n * DID Comm plugin interface for {@link @veramo/core#Agent}\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDIDComm extends "
            },
            {
              "kind": "Reference",
              "text": "IPluginMethodMap",
              "canonicalReference": "@veramo/core-types!IPluginMethodMap:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/types/IDIDComm.ts",
          "releaseTag": "Beta",
          "name": "IDIDComm",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/did-comm!IDIDComm#getDIDCommMessageMediaType:member(1)",
              "docComment": "/**\n * Partially decodes a possible DIDComm message string to determine the {@link DIDCommMessageMediaType}\n *\n * @param args - the message to be interpreted\n *\n * @returns - the {@link DIDCommMessageMediaType} if it was successfully parsed\n *\n * @throws\n *\n * if the message cannot be parsed as DIDComm v2\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDIDCommMessageMediaType(args: "
                },
                {
                  "kind": "Reference",
                  "text": "IPackedDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IPackedDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DIDCommMessageMediaType",
                  "canonicalReference": "@veramo/did-comm!DIDCommMessageMediaType:enum"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "getDIDCommMessageMediaType"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/did-comm!IDIDComm#packDIDCommMessage:member(1)",
              "docComment": "/**\n * Packs a {@link IDIDCommMessage} using one of the {@link DIDCommMessagePacking} options.\n *\n * @param args - an {@link IPackDIDCommMessageArgs} object. * args.message - {@link IDIDCommMessage} - the message to be packed * args.packing - {@link DIDCommMessagePacking} - the packing method * args.keyRef - Optional - string - either an `id` of a {@link did-resolver#VerificationMethod} `kid` of a {@link @veramo/core-types#IKey} that will be used when `packing` is `jws` or `authcrypt`. * args.options - {@link IDIDCommOptions} - optional options\n *\n * @param context - This method requires an agent that also has {@link @veramo/core-types#IDIDManager}, {@link @veramo/core-types#IKeyManager} and {@link @veramo/core-types#IResolver} plugins in use. When calling this method, the `context` is supplied automatically by the framework.\n *\n * @returns - a Promise that resolves to a {@link IPackedDIDCommMessage} object containing the serialized packed `message` string\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "packDIDCommMessage(args: "
                },
                {
                  "kind": "Reference",
                  "text": "IPackDIDCommMessageArgs",
                  "canonicalReference": "@veramo/did-comm!IPackDIDCommMessageArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IAgentContext",
                  "canonicalReference": "@veramo/core-types!IAgentContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDManager",
                  "canonicalReference": "@veramo/core-types!IDIDManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IKeyManager",
                  "canonicalReference": "@veramo/core-types!IKeyManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IResolver",
                  "canonicalReference": "@veramo/core-types!IResolver:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IPackedDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IPackedDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "name": "packDIDCommMessage"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/did-comm!IDIDComm#sendDIDCommMessage:member(1)",
              "docComment": "/**\n * Sends the given message to the recipient. If a return-transport is provided it will be checked whether the parent thread allows reusing the route. You cannot reuse the transport if the message was forwarded from a DIDComm mediator.\n *\n * Emits an eventType 'DIDCommV2Message-sent' that contains the message id of packed DIDComm message {@link IPackedDIDCommMessage} after the message was sent.\n *\n * @param args - An object containing the message, recipient information and optional information about the transport that should be used.\n *\n * @param context - This method requires an agent that also has {@link @veramo/core-types#IResolver}, {@link @veramo/core-types#IKeyManager}, {@link @veramo/core-types#IDIDManager}, and {@link @veramo/core-types#IMessageHandler} plugins in use. When calling this method, the `context` is supplied automatically by the framework.\n *\n * @returns - a {@link ISendDIDCommMessageResponse} containing the transport id that was used to send the message and a return message, if one is available. It throws an error in case something went wrong.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendDIDCommMessage(args: "
                },
                {
                  "kind": "Reference",
                  "text": "ISendDIDCommMessageArgs",
                  "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IAgentContext",
                  "canonicalReference": "@veramo/core-types!IAgentContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDManager",
                  "canonicalReference": "@veramo/core-types!IDIDManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IKeyManager",
                  "canonicalReference": "@veramo/core-types!IKeyManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IResolver",
                  "canonicalReference": "@veramo/core-types!IResolver:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IMessageHandler",
                  "canonicalReference": "@veramo/core-types!IMessageHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISendDIDCommMessageResponse",
                  "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "name": "sendDIDCommMessage"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/did-comm!IDIDComm#sendMessageDIDCommAlpha1:member(1)",
              "docComment": "/**\n * @remarks\n *\n * Be advised that this spec is still not final and that this protocol may need to change.\n *\n * @deprecated\n *\n * Please use {@link IDIDComm.sendDIDCommMessage} instead. This will be removed in Veramo 4.0\n *\n * This is used to create a message according to the initial {@link https://github.com/decentralized-identifier/DIDComm-js | DIDComm-js} implementation.\n *\n * @param args - Arguments necessary for sending a DIDComm message\n *\n * @param context - This reserved param is automatically added and handled by the framework, *do not override*\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendMessageDIDCommAlpha1(args: "
                },
                {
                  "kind": "Reference",
                  "text": "ISendMessageDIDCommAlpha1Args",
                  "canonicalReference": "@veramo/did-comm!ISendMessageDIDCommAlpha1Args:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IAgentContext",
                  "canonicalReference": "@veramo/core-types!IAgentContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDManager",
                  "canonicalReference": "@veramo/core-types!IDIDManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IKeyManager",
                  "canonicalReference": "@veramo/core-types!IKeyManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IResolver",
                  "canonicalReference": "@veramo/core-types!IResolver:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IMessageHandler",
                  "canonicalReference": "@veramo/core-types!IMessageHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IMessage",
                  "canonicalReference": "@veramo/core-types!IMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "name": "sendMessageDIDCommAlpha1"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/did-comm!IDIDComm#unpackDIDCommMessage:member(1)",
              "docComment": "/**\n * Unpacks a possible DIDComm message and returns the {@link IDIDCommMessage} and {@link DIDCommMessagePacking} used to pack it.\n *\n * @param args - an object containing the serialized message to be unpacked\n *\n * @param context - This method requires an agent that also has {@link @veramo/core-types#IDIDManager}, {@link @veramo/core-types#IKeyManager} and {@link @veramo/core-types#IResolver} plugins in use. When calling this method, the `context` is supplied automatically by the framework.\n *\n * @returns - a Promise that resolves to an object containing the {@link IDIDCommMessage} and {@link DIDCommMessagePacking} used.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unpackDIDCommMessage(args: "
                },
                {
                  "kind": "Reference",
                  "text": "IUnpackDIDCommMessageArgs",
                  "canonicalReference": "@veramo/did-comm!IUnpackDIDCommMessageArgs:type"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IAgentContext",
                  "canonicalReference": "@veramo/core-types!IAgentContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDManager",
                  "canonicalReference": "@veramo/core-types!IDIDManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IKeyManager",
                  "canonicalReference": "@veramo/core-types!IKeyManager:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "IResolver",
                  "canonicalReference": "@veramo/core-types!IResolver:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IUnpackedDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IUnpackedDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "name": "unpackDIDCommMessage"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface",
          "docComment": "/**\n * The DIDComm message structure. See https://identity.foundation/didcomm-messaging/spec/#plaintext-message-structure\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDIDCommMessage "
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "IDIDCommMessage",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#attachments:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachments?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommMessageAttachment",
                  "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "attachments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#body:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "body: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "body",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#created_time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "created_time?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "created_time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#expires_time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expires_time?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "expires_time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#from_prior:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "from_prior?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "from_prior",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#from:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "from?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "from",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#next:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "next",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#pthid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pthid?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "pthid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#return_route:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "return_route?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "return_route",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#thid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "thid?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "thid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#to:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "to: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "to",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessage#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment:interface",
          "docComment": "/**\n * The DIDComm message structure for attachments. See https://identity.foundation/didcomm-messaging/spec/#attachments\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDIDCommMessageAttachment "
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "IDIDCommMessageAttachment",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment#byte_count:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "byte_count?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "byte_count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommMessageAttachmentData",
                  "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachmentData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment#description:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment#filename:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filename?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "filename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment#format:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "format?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "format",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment#lastmod_time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastmod_time?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "lastmod_time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachment#media_type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "media_type?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "media_type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachmentData:interface",
          "docComment": "/**\n * The DIDComm message structure for data in an attachment. See https://identity.foundation/didcomm-messaging/spec/#attachments\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDIDCommMessageAttachmentData "
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "IDIDCommMessageAttachmentData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachmentData#base64:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "base64?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "base64",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachmentData#hash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hash?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "hash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachmentData#json:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "json?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "json",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachmentData#jws:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jws?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "jws",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageAttachmentData#links:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "links?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "links",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IDIDCommMessageMetaData:interface",
          "docComment": "/**\n * Metadata resulting from unpacking a DIDComm v2 message.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDIDCommMessageMetaData "
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "IDIDCommMessageMetaData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommMessageMetaData#packing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "packing: "
                },
                {
                  "kind": "Reference",
                  "text": "DIDCommMessagePacking",
                  "canonicalReference": "@veramo/did-comm!DIDCommMessagePacking:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "packing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IDIDCommOptions:interface",
          "docComment": "/**\n * Extra options when packing a DIDComm message.\n *\n * - This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDIDCommOptions "
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "IDIDCommOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommOptions#alg:member",
              "docComment": "/**\n * Optional key wrapping algorithm to use. Defaults to 'ECDH-ES+A256KW'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alg?: "
                },
                {
                  "kind": "Content",
                  "text": "'ECDH-ES+A256KW' | 'ECDH-1PU+A256KW' | 'ECDH-ES+XC20PKW' | 'ECDH-1PU+XC20PKW'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "alg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommOptions#bcc:member",
              "docComment": "/**\n * Add extra recipients for the packed message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bcc?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "bcc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommOptions#enc:member",
              "docComment": "/**\n * Optional content encryption algorithm to use. Defaults to 'A256GCM'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enc?: "
                },
                {
                  "kind": "Content",
                  "text": "'XC20P' | 'A256GCM' | 'A256CBC-HS512'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "enc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommOptions#recipientKids:member",
              "docComment": "/**\n * Restrict to a set of kids for recipient\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recipientKids?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "recipientKids",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IDIDCommTransport:interface",
          "docComment": "/**\n * Common interface for transports that can be used in the {@link DIDComm} module.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDIDCommTransport "
            }
          ],
          "fileUrlPath": "src/transports/transports.ts",
          "releaseTag": "Beta",
          "name": "IDIDCommTransport",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommTransport#id:member",
              "docComment": "/**\n * Identifier of this transport that can be used in case the message thread supports reusing the transport connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommTransport#isServiceSupported:member(1)",
              "docComment": "/**\n * Returns `true` if this transport is suitable for the provided DID Document service section, otherwise `false`.\n *\n * @param service - The DID Document service section\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isServiceSupported(service: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "service",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "isServiceSupported"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommTransport#send:member(1)",
              "docComment": "/**\n * Sends the provided raw message (without further processing) to the service endpoint defined in the provided DID Document service section.\n *\n * @param service - The DID Document service section that contains a `serviceEndpoint` entry.\n *\n * @param message - The message to be sent.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(service: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommTransportResult",
                  "canonicalReference": "@veramo/did-comm!IDIDCommTransportResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "service",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "send"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IDIDCommTransportResult:interface",
          "docComment": "/**\n * Result interface for sending DIDComm messages through {@link IDIDCommTransport.send}.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDIDCommTransportResult "
            }
          ],
          "fileUrlPath": "src/transports/transports.ts",
          "releaseTag": "Beta",
          "name": "IDIDCommTransportResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommTransportResult#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommTransportResult#result:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "result?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IDIDCommTransportResult#returnMessage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "returnMessage?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "returnMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IPackDIDCommMessageArgs:interface",
          "docComment": "/**\n * The input to the {@link IDIDComm.packDIDCommMessage} method. When `packing` is `authcrypt` or `jws`, a `keyRef` MUST be provided.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPackDIDCommMessageArgs "
            }
          ],
          "fileUrlPath": "src/types/IDIDComm.ts",
          "releaseTag": "Beta",
          "name": "IPackDIDCommMessageArgs",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IPackDIDCommMessageArgs#keyRef:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyRef?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "keyRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IPackDIDCommMessageArgs#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IPackDIDCommMessageArgs#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommOptions",
                  "canonicalReference": "@veramo/did-comm!IDIDCommOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IPackDIDCommMessageArgs#packing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "packing: "
                },
                {
                  "kind": "Reference",
                  "text": "DIDCommMessagePacking",
                  "canonicalReference": "@veramo/did-comm!DIDCommMessagePacking:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "packing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IPackedDIDCommMessage:interface",
          "docComment": "/**\n * The result of packing a DIDComm v2 message. The message is always serialized as string.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPackedDIDCommMessage "
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "IPackedDIDCommMessage",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IPackedDIDCommMessage#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageArgs:interface",
          "docComment": "/**\n * The input to the {@link IDIDComm.sendDIDCommMessage} method. The provided `messageId` will be used in the emitted event to allow event/message correlation.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISendDIDCommMessageArgs "
            }
          ],
          "fileUrlPath": "src/types/IDIDComm.ts",
          "releaseTag": "Beta",
          "name": "ISendDIDCommMessageArgs",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageArgs#messageId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "messageId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "messageId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageArgs#packedMessage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "packedMessage: "
                },
                {
                  "kind": "Reference",
                  "text": "IPackedDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IPackedDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "packedMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageArgs#recipientDidUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recipientDidUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "recipientDidUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageArgs#returnTransportId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "returnTransportId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "returnTransportId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageResponse:interface",
          "docComment": "/**\n * The response from the {@link IDIDComm.sendDIDCommMessage} method.\n *\n * This API may change without a BREAKING CHANGE notice. `return_message` is only present if the `return_route: 'all'` was used in the packedMessage.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISendDIDCommMessageResponse "
            }
          ],
          "fileUrlPath": "src/types/IDIDComm.ts",
          "releaseTag": "Beta",
          "name": "ISendDIDCommMessageResponse",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageResponse#returnMessage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "returnMessage?: "
                },
                {
                  "kind": "Reference",
                  "text": "IMessage",
                  "canonicalReference": "@veramo/core-types!IMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "returnMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendDIDCommMessageResponse#transportId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transportId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "transportId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!ISendMessageDIDCommAlpha1Args:interface",
          "docComment": "/**\n * @deprecated\n *\n * Please use {@link IDIDComm.sendDIDCommMessage} instead. This will be removed in Veramo 4.0. Input arguments for {@link IDIDComm.sendMessageDIDCommAlpha1}\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISendMessageDIDCommAlpha1Args "
            }
          ],
          "fileUrlPath": "src/didcomm.ts",
          "releaseTag": "Beta",
          "name": "ISendMessageDIDCommAlpha1Args",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendMessageDIDCommAlpha1Args#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        id?: string;\n        from: string;\n        to: string;\n        type: string;\n        body: object | string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendMessageDIDCommAlpha1Args#headers:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendMessageDIDCommAlpha1Args#save:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "save?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "save",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!ISendMessageDIDCommAlpha1Args#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Beta",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@veramo/did-comm!IUnpackDIDCommMessageArgs:type",
          "docComment": "/**\n * The input to the {@link IDIDComm.unpackDIDCommMessage} method.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IUnpackDIDCommMessageArgs = "
            },
            {
              "kind": "Reference",
              "text": "IPackedDIDCommMessage",
              "canonicalReference": "@veramo/did-comm!IPackedDIDCommMessage:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types/IDIDComm.ts",
          "releaseTag": "Beta",
          "name": "IUnpackDIDCommMessageArgs",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!IUnpackedDIDCommMessage:interface",
          "docComment": "/**\n * The result of unpacking a DIDComm v2 message.\n *\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IUnpackedDIDCommMessage "
            }
          ],
          "fileUrlPath": "src/types/message-types.ts",
          "releaseTag": "Beta",
          "name": "IUnpackedDIDCommMessage",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IUnpackedDIDCommMessage#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommMessage",
                  "canonicalReference": "@veramo/did-comm!IDIDCommMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!IUnpackedDIDCommMessage#metaData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metaData: "
                },
                {
                  "kind": "Reference",
                  "text": "IDIDCommMessageMetaData",
                  "canonicalReference": "@veramo/did-comm!IDIDCommMessageMetaData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "metaData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!MEDIATE_DENY_MESSAGE_TYPE:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MEDIATE_DENY_MESSAGE_TYPE = "
            },
            {
              "kind": "Content",
              "text": "\"https://didcomm.org/coordinate-mediation/2.0/mediate-deny\""
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "MEDIATE_DENY_MESSAGE_TYPE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!MEDIATE_GRANT_MESSAGE_TYPE:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MEDIATE_GRANT_MESSAGE_TYPE = "
            },
            {
              "kind": "Content",
              "text": "\"https://didcomm.org/coordinate-mediation/2.0/mediate-grant\""
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "MEDIATE_GRANT_MESSAGE_TYPE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!MEDIATE_REQUEST_MESSAGE_TYPE:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MEDIATE_REQUEST_MESSAGE_TYPE = "
            },
            {
              "kind": "Content",
              "text": "\"https://didcomm.org/coordinate-mediation/2.0/mediate-request\""
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "MEDIATE_REQUEST_MESSAGE_TYPE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@veramo/did-comm!MessagePickup:enum",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum MessagePickup "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "name": "MessagePickup",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!MessagePickup.DELIVERY_REQUEST_MESSAGE_TYPE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DELIVERY_REQUEST_MESSAGE_TYPE = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/messagepickup/3.0/delivery-request\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "DELIVERY_REQUEST_MESSAGE_TYPE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!MessagePickup.STATUS_REQUEST_MESSAGE_TYPE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "STATUS_REQUEST_MESSAGE_TYPE = "
                },
                {
                  "kind": "Content",
                  "text": "\"https://didcomm.org/messagepickup/3.0/status-request\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "STATUS_REQUEST_MESSAGE_TYPE"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!PickupMediatorMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that handles Pickup messages for the mediator role. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PickupMediatorMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/messagepickup-message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "PickupMediatorMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!PickupMediatorMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PickupMediatorMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!PickupMediatorMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles messages for Pickup protocol and mediator role https://didcomm.org/pickup/3.0/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IContext",
                  "canonicalReference": "@veramo/did-comm!~IContext_4:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!PickupRecipientMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that handles Pickup messages for the mediator role. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PickupRecipientMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/messagepickup-message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "PickupRecipientMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!PickupRecipientMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PickupRecipientMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!PickupRecipientMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles messages for Pickup protocol and recipient role https://didcomm.org/pickup/3.0/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IContext",
                  "canonicalReference": "@veramo/did-comm!~IContext_4:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@veramo/did-comm!RecipientUpdateResult:enum",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * Represents the result of an update action\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum RecipientUpdateResult "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "name": "RecipientUpdateResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!RecipientUpdateResult.CLIENT_ERROR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CLIENT_ERROR = "
                },
                {
                  "kind": "Content",
                  "text": "\"client_error\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "CLIENT_ERROR"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!RecipientUpdateResult.NO_CHANGE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NO_CHANGE = "
                },
                {
                  "kind": "Content",
                  "text": "\"no_change\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "NO_CHANGE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!RecipientUpdateResult.SERVER_ERROR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SERVER_ERROR = "
                },
                {
                  "kind": "Content",
                  "text": "\"server_error\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "SERVER_ERROR"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!RecipientUpdateResult.SUCCESS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SUCCESS = "
                },
                {
                  "kind": "Content",
                  "text": "\"success\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "SUCCESS"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!RoutingMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that handles forward messages for the Routing protocol. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class RoutingMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/routing-message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "RoutingMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!RoutingMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `RoutingMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!RoutingMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles forward messages for Routing protocol https://didcomm.org/routing/2.0/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IContext",
                  "canonicalReference": "@veramo/did-comm!~IContext_3:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@veramo/did-comm!STATUS_REQUEST_MESSAGE_TYPE:var",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "STATUS_REQUEST_MESSAGE_TYPE = "
            },
            {
              "kind": "Content",
              "text": "\"https://didcomm.org/messagepickup/3.0/status-request\""
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-message-handler.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Beta",
          "name": "STATUS_REQUEST_MESSAGE_TYPE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@veramo/did-comm!TrustPingMessageHandler:class",
          "docComment": "/**\n * A plugin for the {@link @veramo/message-handler#MessageHandler} that handles Trust Ping messages. This API may change without a BREAKING CHANGE notice.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TrustPingMessageHandler extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMessageHandler",
              "canonicalReference": "@veramo/message-handler!AbstractMessageHandler:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/trust-ping-message-handler.ts",
          "releaseTag": "Beta",
          "isAbstract": false,
          "name": "TrustPingMessageHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@veramo/did-comm!TrustPingMessageHandler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `TrustPingMessageHandler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@veramo/did-comm!TrustPingMessageHandler#handle:member(1)",
              "docComment": "/**\n * Handles a Trust Ping Message https://identity.foundation/didcomm-messaging/spec/#trust-ping-protocol-10\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle(message: "
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "IContext",
                  "canonicalReference": "@veramo/did-comm!~IContext_2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Message",
                  "canonicalReference": "@veramo/message-handler!Message:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Beta",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!Update:interface",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * Represents the structure of a specific update on RECIPIENT_UPDATE\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Update "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "name": "Update",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!Update#action:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateAction",
                  "canonicalReference": "@veramo/did-comm!UpdateAction:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!Update#recipient_did:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recipient_did: "
                },
                {
                  "kind": "Reference",
                  "text": "RecipientDid",
                  "canonicalReference": "@veramo/mediation-manager!RecipientDid:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "recipient_did",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@veramo/did-comm!UpdateAction:enum",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * Represents the actions (add or remove) that can be taken on a recipient did\n *\n * @see\n *\n * {@link @veramo/did-comm#CoordinateMediationV3MediatorMessageHandler}\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum UpdateAction "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "name": "UpdateAction",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!UpdateAction.ADD:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ADD = "
                },
                {
                  "kind": "Content",
                  "text": "\"add\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "ADD"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@veramo/did-comm!UpdateAction.REMOVE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "REMOVE = "
                },
                {
                  "kind": "Content",
                  "text": "\"remove\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Beta",
              "name": "REMOVE"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@veramo/did-comm!UpdateResult:interface",
          "docComment": "/**\n * This API may change without a BREAKING CHANGE notice.\n *\n * Represents an update response on RECIPIENT_UPDATE_RESPONSE\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UpdateResult extends "
            },
            {
              "kind": "Reference",
              "text": "Update",
              "canonicalReference": "@veramo/did-comm!Update:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/protocols/coordinate-mediation-v3-message-handler.ts",
          "releaseTag": "Beta",
          "name": "UpdateResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@veramo/did-comm!UpdateResult#result:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "result: "
                },
                {
                  "kind": "Reference",
                  "text": "RecipientUpdateResult",
                  "canonicalReference": "@veramo/did-comm!RecipientUpdateResult:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Beta",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        }
      ]
    }
  ]
}
